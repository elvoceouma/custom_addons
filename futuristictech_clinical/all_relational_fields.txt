./models/op_visit.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/op_visit.py:    related_partner = fields.Many2one('res.partner', string='Related Partner')
./models/op_visit.py:    physician_id = fields.Many2one('res.partner', string='Treating Doctor', 
./models/op_visit.py:    prescription_ids = fields.One2many('hospital.prescription', 'op_visit_id', string='Prescriptions')
./models/op_visit.py:    bill_ids = fields.One2many('hospital.op.bill', 'op_visit_id', string='OP Bills')
./models/op_visit.py:    op_visit_id = fields.Many2one('hospital.op.visit', string='OP Visit', required=True)
./models/op_visit.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', related='op_visit_id.patient_id', store=True)
./models/op_visit.py:    line_ids = fields.One2many('hospital.op.bill.line', 'bill_id', string='Bill Lines')
./models/op_visit.py:    bill_id = fields.Many2one('hospital.op.bill', string='Bill', required=True, ondelete='cascade')
./models/op_visit.py:    product_id = fields.Many2one('product.product', string='Product', required=True)
./models/op_visit.py:    uom_id = fields.Many2one('uom.uom', string='Unit of Measure')
./models/op_visit.py:    tax_ids = fields.Many2many('account.tax', string='Taxes')
./models/discharge.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/discharge.py:    admission_id = fields.Many2one('hospital.admission', string='Admission', required=True)
./models/discharge.py:    discharged_by = fields.Many2one('res.users', string='Discharged By', default=lambda self: self.env.user)
./models/discharge.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/discharge.py:    admission_id = fields.Many2one('hospital.admission', string='Admission', required=True)
./models/discharge.py:    discharge_id = fields.Many2one('hospital.discharge', string='Discharge Record')
./models/discharge.py:    physician_id = fields.Many2one('res.partner', string='Physician', domain=[('is_physician', '=', True)])
./models/hospital_appointment.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/hospital_appointment.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True)
./models/hospital_appointment.py:    health_center_id = fields.Many2one('hospital.hospital', string='Health Center')
./models/hospital_appointment.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus', required=True, tracking=True)
./models/hospital_appointment.py:    appointment_type_id = fields.Many2one('hospital.appointment.type', string='Appointment Type')
./models/hospital_appointment.py:    evaluation_ids = fields.One2many('hospital.appointment.evaluation', 'appointment_id', string='Evaluations')
./models/hospital_appointment.py:    appointment_id = fields.Many2one('hospital.appointment', string='Appointment', required=True, ondelete='cascade')
./models/hospital_appointment.py:    evaluator_id = fields.Many2one('res.users', string='Evaluator', default=lambda self: self.env.user)
./models/outside_consultation.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/outside_consultation.py:    admission_id = fields.Many2one('hospital.admission', string='Admission', tracking=True)
./models/outside_consultation.py:    speciality_id = fields.Many2one('hospital.physician.speciality', string='Speciality', required=True, tracking=True)
./models/outside_consultation.py:    advisor_id = fields.Many2one('res.users', string='Advisor', default=lambda self: self.env.user, tracking=True)
./models/outside_consultation.py:    attachment_ids = fields.Many2many('ir.attachment', string='Attachments')
./models/outside_consultation.py:    op_visit_id = fields.Many2one('hospital.appointment', string='OP Reference', 
./models/outside_consultation.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus', tracking=True)
./models/outside_consultation.py:    psychiatrist_id = fields.Many2one('hospital.physician', string='Psychiatrist', tracking=True)
./models/outside_consultation.py:    doctor_id = fields.Many2one('hospital.physician', string='Doctor', tracking=True)
./models/outside_consultation.py:    partner_id = fields.Many2one('res.partner', string='Company', tracking=True)
./models/outside_consultation.py:    next_followup_id = fields.Many2one('hospital.appointment', string='Next Followup', tracking=True)
./models/outside_consultation.py:    user_id = fields.Many2one('res.users', string='Created By', default=lambda self: self.env.user, tracking=True)
./models/outside_consultation.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company, tracking=True)
./models/pharmacy.py:    pharmacist_id = fields.Many2one('res.users', string='Pharmacist')
./models/pharmacy.py:    location_id = fields.Many2one('stock.location', string='Stock Location')
./models/pharmacy.py:    hospital_id = fields.Many2one('hospital.hospital', string='Campus', required=True)
./models/pharmacy.py:    stock_picking_type_ids = fields.Many2many(
./models/pharmacy.py:    medicine_ids = fields.One2many(
./models/pharmacy.py:    prescription_ids = fields.One2many(
./models/block.py:    dispensing_store = fields.Many2one('stock.location', string='Dispensing Store')
./models/block.py:    emergency_store = fields.Many2one('stock.location', string='Emergency Store')
./models/block.py:    request_picking_type = fields.Many2one('stock.picking.type', string='Request Picking Type')
./models/block.py:    return_picking_type = fields.Many2one('stock.picking.type', string='Return Picking Type')
./models/block.py:    emergency_picking_type = fields.Many2one('stock.picking.type', string='Emergency Picking Type')
./models/block.py:    hospital_id = fields.Many2one('hospital.hospital', string='Campus', required=True)
./models/block.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus')
./models/block.py:    room_ids = fields.One2many('hospital.room', 'block_id', string='Rooms')
./models/block.py:    bed_ids = fields.One2many('hospital.bed', 'block_id', string='Beds')
./models/registration_form.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus', required=True, tracking=True)
./models/registration_form.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', tracking=True)
./models/registration_form.py:    languages_known = fields.Many2many('res.lang', string='Languages Known')
./models/registration_form.py:    crm_remarks_ids = fields.One2many('hospital.registration.crm.remarks', 'registration_id', string='CRM Remarks')
./models/registration_form.py:    registration_id = fields.Many2one('hospital.registration.form', string='Registration', required=True, ondelete='cascade')
./models/registration_form.py:    employee_id = fields.Many2one('hr.employee', string='Employee')
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    service_id = fields.Many2one('hospital.service', string='Service', required=True)
./models/registration_form.py:    physician_id = fields.Many2one('res.partner', string='Physician', domain=[('is_physician', '=', True)])
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    language_id = fields.Many2one('res.lang', string='Language', required=True)
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    relationship_id = fields.Many2one('hospital.patient.relationship', string='Relationship', required=True)
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    condition_id = fields.Many2one('hospital.physical.health.condition', string='Condition', required=True)
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    service_id = fields.Many2one('hospital.service', string='Service', required=True)
./models/registration_form.py:    physician_id = fields.Many2one('res.partner', string='Physician', domain=[('is_physician', '=', True)])
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    assessment_type_id = fields.Many2one('hospital.assessment.type', string='Assessment Type', required=True)
./models/registration_form.py:    physician_id = fields.Many2one('res.partner', string='Physician', domain=[('is_physician', '=', True)])
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    observer_id = fields.Many2one('res.partner', string='Observer', domain=[('is_physician', '=', True)])
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    observer_id = fields.Many2one('res.partner', string='Observer', domain=[('is_physician', '=', True)])
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    illness_id = fields.Many2one('hospital.physical.illness', string='Physical Illness', required=True)
./models/registration_form.py:    diagnosed_by = fields.Many2one('res.partner', string='Diagnosed By', domain=[('is_physician', '=', True)])
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    illness_id = fields.Many2one('hospital.psychiatric.illness', string='Psychiatric Illness', required=True)
./models/registration_form.py:    diagnosed_by = fields.Many2one('res.partner', string='Diagnosed By', domain=[('is_physician', '=', True)])
./models/registration_form.py:    registration_form_id = fields.Many2one('hospital.registration.form', string='Registration Form', required=True, ondelete='cascade')
./models/registration_form.py:    patient_id = fields.Many2one('res.partner', string='Patient', required=True)
./models/registration_form.py:    inpatient_admission_id = fields.Many2one('inpatient.admission', string='Admission')
./models/registration_form.py:    campus_id = fields.Many2one('hospital.campus', string='Campus')
./models/registration_form.py:    block_id = fields.Many2one('hospital.block', string='Block')
./models/registration_form.py:    room_id = fields.Many2one('hospital.room', string='Room')
./models/registration_form.py:    bed_id = fields.Many2one('hospital.bed', string='Bed')
./models/registration_form.py:    product_id = fields.Many2one('product.product', string='Product', required=True)
./models/registration_form.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/registration_form.py:    user_id = fields.Many2one('res.users', string='Responsible', default=lambda self: self.env.user)
./models/room.py:    block_id = fields.Many2one('hospital.block', string='Block', required=True)
./models/room.py:    hospital_id = fields.Many2one(related='block_id.hospital_id', string='Campus', store=True)
./models/room.py:    bed_ids = fields.One2many('hospital.bed', 'room_id', string='Beds')
./models/food.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/food.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/food.py:    food_item_ids = fields.One2many('hospital.food.requisition.line', 'requisition_id', string='Food Items')
./models/food.py:    requisition_id = fields.Many2one('hospital.food.requisition', string='Requisition')
./models/food.py:    food_item_id = fields.Many2one('hospital.food.item', string='Food Item')
./models/food.py:    uom_id = fields.Many2one('uom.uom', string='Unit of Measure')
./models/food.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/food.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True)
./models/food.py:    evaluation_type_id = fields.Many2one('hospital.evaluation.type', string='Evaluation Type')
./models/food.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/food.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True)
./models/food.py:    evaluation_type_id = fields.Many2one('hospital.evaluation.type', string='Evaluation Type')
./models/food.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/food.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True)
./models/food.py:    evaluation_type_id = fields.Many2one('hospital.evaluation.type', string='Evaluation Type')
./models/prescription.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/prescription.py:    physician_id = fields.Many2one('res.partner', string='Physician', required=True)
./models/prescription.py:    op_visit_id = fields.Many2one('hospital.op.visit', string='OP Visit')
./models/prescription.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/prescription.py:    line_ids = fields.One2many('hospital.prescription.line', 'prescription_id', string='Prescription Lines')
./models/prescription.py:    pharmacy_id = fields.Many2one('hospital.pharmacy', string='Pharmacy')
./models/prescription.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company, tracking=True)
./models/prescription.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus', tracking=True)
./models/prescription.py:    medicine_register_ids = fields.One2many('medicine.register', 'prescription_id', string='Medicine Registers')
./models/prescription.py:    prescription_id = fields.Many2one('hospital.prescription', string='Prescription', required=True)
./models/prescription.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/prescription.py:    frequency_id = fields.Many2one('hospital.drug.frequency', string='Frequency')
./models/prescription.py:    route_id = fields.Many2one('hospital.drug.route', string='Route')
./models/prescription.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/prescription.py:    physician_id = fields.Many2one('hospital.physician', string='Physician')
./models/prescription.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine')
./models/prescription.py:    uom_id = fields.Many2one('uom.uom', string='UOM')
./models/hospital.py:    block_ids = fields.One2many('hospital.block', 'hospital_id', string='Blocks')
./models/hospital.py:    pharmacy_ids = fields.One2many('hospital.pharmacy', 'hospital_id', string='Pharmacies')
./models/hospital.py:    medicine_register_ids = fields.One2many('medicine.register', 'campus_id', string='Medicine Registers')
./models/hospital.py:    patient_requisition_picking_type_id = fields.Many2one('stock.picking.type', string='Patient Requisition Picking Type')
./models/hospital.py:    store_clearance_picking_type_id = fields.Many2one('stock.picking.type', string='Store Clearance Picking Type')
./models/hospital.py:    medicine_packing_picking_type_id = fields.Many2one('stock.picking.type', string='Medicine Packing Picking Type')
./models/follow_up_sheet.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/follow_up_sheet.py:    user_id = fields.Many2one('res.users', string='User', default=lambda self: self.env.user, tracking=True)
./models/follow_up_sheet.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company, tracking=True)
./models/follow_up_sheet.py:    hygiene_detail_ids = fields.One2many('hospital.hygiene.detail', 'follow_up_sheet_id', string='Hygiene Details')
./models/follow_up_sheet.py:    formal_activity_ids = fields.One2many('hospital.activity.record', 'follow_up_sheet_id', string='Formal Activities',
./models/follow_up_sheet.py:    informal_activity_ids = fields.One2many('hospital.activity.record', 'follow_up_sheet_id', string='Informal Activities',
./models/follow_up_sheet.py:    family_session_ids = fields.One2many('hospital.family.session', 'follow_up_sheet_id', string='Family Sessions')
./models/follow_up_sheet.py:    follow_up_sheet_id = fields.Many2one('hospital.follow.up.sheet', string='Follow-Up Sheet', required=True, ondelete='cascade')
./models/follow_up_sheet.py:    follow_up_sheet_id = fields.Many2one('hospital.follow.up.sheet', string='Follow-Up Sheet', required=True, ondelete='cascade')
./models/follow_up_sheet.py:    follow_up_sheet_id = fields.Many2one('hospital.follow.up.sheet', string='Follow-Up Sheet', required=True, ondelete='cascade')
./models/hospital_physician.py:    degree_ids = fields.Many2many('hospital.physician.degree', string='Degrees', tracking=True)
./models/hospital_physician.py:    speciality_id = fields.Many2one('hospital.physician.speciality', string='Speciality', tracking=True)
./models/hospital_physician.py:    availability_ids = fields.One2many('hospital.physician.availability', 'physician_id', string='Weekly Availability')
./models/hospital_physician.py:    user_id = fields.Many2one('res.users', string='Related User', tracking=True)
./models/hospital_physician.py:    partner_id = fields.Many2one('res.partner', string='Related Partner', tracking=True)
./models/hospital_physician.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/hospital_physician.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True, ondelete='cascade')
./models/medicine.py:    medicine_type_id = fields.Many2one('hospital.medication.type', string='Medicine Type')
./models/medicine.py:    medicine_category_id = fields.Many2one('hospital.medication.category', string='Medicine Category')
./models/medicine.py:    dosage_ids = fields.One2many('hospital.medicine.dosage', 'medicine_id', string='Dosages')
./models/medicine.py:    pharmacy_id = fields.Many2one('hospital.pharmacy', string='Pharmacy')
./models/medicine.py:    patient_id = fields.Many2one('hospital.patient', string='Patient')
./models/medicine.py:    prescription_ids = fields.One2many('hospital.prescription.line', 'medicine_id', string='Prescriptions')
./models/medicine.py:    type_id = fields.Many2one('medicine.type', string='Type')
./models/medicine.py:    form_id = fields.Many2one('hospital.drug.form', string='Form')
./models/medicine.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/medicine.py:    dose_unit_id = fields.Many2one('hospital.dose.unit', string='Dose Unit')
./models/medicine.py:    unit_id = fields.Many2one('hospital.dose.unit', string='Unit')
./models/medicine.py:    route_id = fields.Many2one('hospital.drug.route', string='Route')
./models/medicine.py:    form_id = fields.Many2one('hospital.drug.form', string='Form')
./models/medicine.py:    default_category_id = fields.Many2one('hospital.medication.category', string='Default Category')
./models/medicine.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/medicine.py:    pharmacy_id = fields.Many2one('hospital.pharmacy', string='Pharmacy', required=True)
./models/medicine.py:    campus_id = fields.Many2one('hospital.campus', string='Campus', required=True)
./models/medicine.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', tracking=True)
./models/medicine.py:    campus_id = fields.Many2one('hospital.campus', string='Campus', tracking=True)
./models/medicine.py:    prescription_id = fields.Many2one('hospital.prescription', string='Prescription', tracking=True)
./models/medicine.py:    type_id = fields.Many2one('medicine.type', string='Type', tracking=True)
./models/medicine.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', tracking=True)
./models/medicine.py:    form_id = fields.Many2one('hospital.medicine.form', string='Form', tracking=True)
./models/medicine.py:    parent_id = fields.Many2one('hospital.medication.category', string='Parent Category')
./models/medicine.py:    child_ids = fields.One2many('hospital.medication.category', 'parent_id', string='Child Categories')
./models/medicine.py:    product_ids = fields.One2many('hospital.medication.product', 'category_id', string='Medication Products')
./models/medicine.py:    category_id = fields.Many2one('hospital.medication.category', string='Medication Category', required=True)
./models/medicine.py:    product_id = fields.Many2one('product.product', string='Related Product')
./models/medicine.py:    medication_type_id = fields.Many2one('hospital.medication.type', string='Medication Type')
./models/medicine.py:    product_ids = fields.One2many('hospital.medication.product', 'medication_type_id', string='Medication Products')
./models/medicine.py:    medication_product_ids = fields.One2many('hospital.medication.product', 'product_id', 
./models/medicine.py:    medication_type_id = fields.Many2one('hospital.medication.type', string='Medication Type')
./models/medicine_box.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/medicine_box.py:    medicine_line_ids = fields.One2many('hospital.medicine.box.line', 'medicine_box_id', string='Medicine Lines')
./models/medicine_box.py:    medicine_box_id = fields.Many2one('hospital.medicine.box', string='Medicine Box', required=True, ondelete='cascade')
./models/medicine_box.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/medication_consent_form.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', tracking=True)
./models/medication_consent_form.py:    campus = fields.Many2one('hospital.hospital', string='Campus')
./models/medication_consent_form.py:    medication_type = fields.Many2one('hospital.medicine.type', string='Medication Type')
./models/medication_consent_form.py:    medical_officer = fields.Many2one('res.users', string='Medical Officer', domain=[('is_medical_officer', '=', True)])
./models/medication_consent_form.py:    medication_line_ids = fields.One2many('medication.consent.form.line', 'consent_form_id', string='Medications')
./models/medication_consent_form.py:    created_by = fields.Many2one('res.users', string='Created By', default=lambda self: self.env.user)
./models/medication_consent_form.py:    company = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/medication_consent_form.py:    confirmed_by = fields.Many2one('res.users', string='Confirmed By')
./models/medication_consent_form.py:    consent_form_id = fields.Many2one('medication.consent.form', string='Consent Form', ondelete='cascade')
./models/medication_consent_form.py:    medication_category_id = fields.Many2one('hospital.medicine.category', string='Medication Category')
./models/medication_consent_form.py:    medication_id = fields.Many2one('hospital.medicine', string='Medication')
./models/configuration.py:    speciality_id = fields.Many2one('hospital.physician.speciality', string='Speciality')
./models/configuration.py:    degree_ids = fields.Many2many('hospital.physician.degree', string='Degrees')
./models/patient.py:    referred_by = fields.Many2one('res.partner', string='Referred by')
./models/patient.py:    occupation_id = fields.Many2one('hospital.patient.occupation', string='Occupation')
./models/patient.py:    user_id = fields.Many2one('res.users', string='User')
./models/patient.py:    company_id = fields.Many2one('res.company', string='Company')
./models/patient.py:    illness_tag_ids = fields.Many2many('hospital.illness.tag', string='Illness Tags')
./models/patient.py:    family_member_ids = fields.One2many('hospital.family.member', 'patient_id', string='Family Members')
./models/patient.py:    registration_ids = fields.One2many('hospital.registration.form', 'patient_id', string='Registration Forms')
./models/patient.py:    prescription_ids = fields.One2many('hospital.prescription.line', 'patient_id', string='Prescriptions')
./models/patient.py:    appointment_ids = fields.One2many('hospital.appointment', 'patient_id', string='Appointments')
./models/patient.py:    admission_ids = fields.One2many('hospital.admission', 'patient_id', string='Admissions')
./models/patient.py:    document_ids = fields.One2many('hospital.patient.document', 'patient_id', string='Documents')
./models/patient.py:    vaccine_ids = fields.One2many('hospital.patient.vaccine', 'patient_id', string='Vaccines')
./models/patient.py:    op_visit_ids = fields.One2many('hospital.op.visit', 'patient_id', string='OP Visits')
./models/patient.py:    evaluation_ids = fields.One2many('hospital.evaluation', 'patient_id', string='Evaluations')
./models/patient.py:    lab_test_ids = fields.One2many('hospital.lab.test', 'patient_id', string='Lab Tests')
./models/patient.py:    crm_document_ids = fields.One2many('crm.document', 'patient_id', string='CRM Documents')
./models/patient.py:    insurance_id = fields.Many2one('hospital.insurance', string='Insurance')
./models/patient.py:    medicine_register_ids = fields.One2many('medicine.register', 'patient_id', string='Medicine Registers')
./models/patient.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/patient.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/patient.py:    document_type_id = fields.Many2one('hospital.document.type', string='Document Type')
./models/patient.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/patient.py:    test_type_id = fields.Many2one('hospital.lab.test.type', string='Test Type', tracking=True)
./models/patient.py:    pathologist_id = fields.Many2one('res.partner', string='Pathologist')
./models/patient.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/patient.py:    pysician_id = fields.Many2one('hospital.physician', string='Physician', tracking=True)
./models/patient.py:    # requisition_id = fields.Many2one('hospital.lab.requisition', string='Requisition ID')
./models/patient.py:    doctor_id = fields.Many2one('hospital.physician', string='Doctor who requested the test', tracking=True)
./models/patient.py:    collected_by = fields.Many2one('res.users', string='Collected By', default=lambda self: self.env.user)
./models/patient.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', tracking=True)
./models/patient.py:    user_id = fields.Many2one('res.users', string='Uploaded By', default=lambda self: self.env.user, tracking=True)
./models/patient.py:    patient_ids = fields.One2many('hospital.patient', 'insurance_id', string='Patients')
./models/admission.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/admission.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus', required=True, tracking=True)
./models/admission.py:    block_id = fields.Many2one('hospital.block', string='Block', required=True, tracking=True)
./models/admission.py:    room_id = fields.Many2one('hospital.room', string='Room', required=True, tracking=True)
./models/admission.py:    bed_id = fields.Many2one('hospital.bed', string='Bed', required=True, tracking=True)
./models/admission.py:    admission_type_id = fields.Many2one('hospital.admission.type', string='Admission Type', tracking=True)
./models/admission.py:    psychiatrist_id = fields.Many2one('res.partner', string='Psychiatrist', domain=[('is_psychiatrist', '=', True)])
./models/admission.py:    clinical_psychologist_id = fields.Many2one('res.partner', string='Clinical Psychologist', domain=[('is_clinical_psychologist', '=', True)])
./models/admission.py:    physician_id = fields.Many2one('res.partner', string='Physician', domain=[('is_physician', '=', True)])
./models/admission.py:    counsellor_id = fields.Many2one('res.partner', string='Counsellor', domain=[('is_counsellor', '=', True)])
./models/admission.py:    acting_counsellor_id = fields.Many2one('res.partner', string='Acting Counsellor', domain=[('is_counsellor', '=', True)])
./models/admission.py:    caretaker_id = fields.Many2one('res.partner', string='Caretaker', domain=[('is_caretaker', '=', True)])
./models/admission.py:    family_therapist_id = fields.Many2one('res.partner', string='Family Therapist', domain=[('is_family_therapist', '=', True)])
./models/admission.py:    attending_physician_id = fields.Many2one('res.partner', string='Attending Physician', domain=[('is_physician', '=', True)])
./models/admission.py:    operating_physician_id = fields.Many2one('res.partner', string='Operating Physician', domain=[('is_physician', '=', True)])
./models/admission.py:    admission_ids = fields.One2many('hospital.admission', 'admission_type_id', string='Admissions')
./models/admission.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/admission.py:    physician_id = fields.Many2one('res.partner', string='Physician')
./models/admission.py:    prescription_ids = fields.One2many('hospital.prescription', 'op_visit_id', string='Prescriptions')
./models/hospital_evaluation.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/hospital_evaluation.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', tracking=True)
./models/hospital_evaluation.py:    appointment_id = fields.Many2one('hospital.appointment', string='Appointment #')
./models/hospital_evaluation.py:    indication = fields.Many2one('hospital.pathology', string='Indication', tracking=True)
./models/hospital_evaluation.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/hospital_evaluation.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True)
./models/hospital_evaluation.py:    evaluation_type_id = fields.Many2one('hospital.evaluation.type', string='Evaluation Type')
./models/hospital_evaluation.py:    category_id = fields.Many2one('hospital.pathology.category', string='Category')
./models/hospital_evaluation.py:    parent_id = fields.Many2one('hospital.pathology.category', string='Parent Category')
./models/hospital_evaluation.py:    child_ids = fields.One2many('hospital.pathology.category', 'parent_id', string='Child Categories')
./models/hospital_caretaker_allotment.py:    caretaker_id = fields.Many2one(
./models/hospital_caretaker_allotment.py:    patient_id = fields.Many2one(
./models/hospital_caretaker_allotment.py:    inpatient_admission_id = fields.Many2one(
./models/hospital_caretaker_allotment.py:    health_center_id = fields.Many2one(
./models/hospital_caretaker_allotment.py:    building_id = fields.Many2one(
./models/hospital_caretaker_allotment.py:    company_id = fields.Many2one(
./models/hospital_caretaker_allotment.py:    caretaker_type_id = fields.Many2one(
./models/hospital_caretaker_allotment.py:    user_id = fields.Many2one(
./models/hospital_caretaker_allotment.py:    approved_by = fields.Many2one(
./models/hospital_caretaker_allotment.py:    cancelled_by = fields.Many2one(
./models/hospital_caretaker_allotment.py:    caretaker_register_ids = fields.Many2many(
./models/hospital_caretaker_allotment.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/hospital_caretaker_allotment.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/hospital_caretaker_allotment.py:    inpatient_admission_id = fields.Many2one('hospital.inpatient.admission', string='Inpatient Admission',
./models/hospital_caretaker_allotment.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/hospital_caretaker_allotment.py:    privilege_line_ids = fields.One2many('hospital.special.privileges.line', 'special_privilege_id', 
./models/hospital_caretaker_allotment.py:    special_privilege_register_ids = fields.Many2many(
./models/hospital_caretaker_allotment.py:    cancelled_by = fields.Many2one('res.users', string='Cancelled By')
./models/hospital_caretaker_allotment.py:    approved_by = fields.Many2one('res.users', string='Approved By')
./models/hospital_caretaker_allotment.py:    special_privilege_id = fields.Many2one('hospital.special.privileges', string='Special Privilege')
./models/hospital_caretaker_allotment.py:    product_id = fields.Many2one('product.product', string='Product', 
./models/hospital_caretaker_allotment.py:    uom_id = fields.Many2one('uom.uom', string='UoM', related='product_id.uom_id')
./models/hospital_caretaker_allotment.py:    special_privileges_ids = fields.Many2many(
./models/inpatient_admission.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/inpatient_admission.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus', required=True, tracking=True)
./models/inpatient_admission.py:    block_id = fields.Many2one('hospital.block', string='Block', required=True, tracking=True)
./models/inpatient_admission.py:    room_id = fields.Many2one('hospital.room', string='Room', required=True, tracking=True)
./models/inpatient_admission.py:    bed_id = fields.Many2one('hospital.bed', string='Bed', required=True, tracking=True)
./models/inpatient_admission.py:    psychiatrist_id = fields.Many2one('res.partner', string='Psychiatrist', domain=[('is_psychiatrist', '=', True)])
./models/inpatient_admission.py:    clinical_psychologist_id = fields.Many2one('res.partner', string='Clinical Psychologist', domain=[('is_clinical_psychologist', '=', True)])
./models/inpatient_admission.py:    physician_id = fields.Many2one('res.partner', string='Physician', domain=[('is_physician', '=', True)])
./models/inpatient_admission.py:    counsellor_id = fields.Many2one('res.partner', string='Counsellor', domain=[('is_counsellor', '=', True)])
./models/inpatient_admission.py:    acting_counsellor_id = fields.Many2one('res.partner', string='Acting Counsellor', domain=[('is_counsellor', '=', True)])
./models/inpatient_admission.py:    caretaker_id = fields.Many2one('res.partner', string='Caretaker', domain=[('is_caretaker', '=', True)])
./models/inpatient_admission.py:    family_therapist_id = fields.Many2one('res.partner', string='Family Therapist', domain=[('is_family_therapist', '=', True)])
./models/inpatient_admission.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/inpatient_admission.py:    user_id = fields.Many2one('res.users', string='User', default=lambda self: self.env.user)
./models/inpatient_admission.py:    clinical_closure_by = fields.Many2one('res.users', string='Clinical Closure By')
./models/inpatient_admission.py:    administrative_closure_by = fields.Many2one('res.users', string='Administrative Closure By')
./models/inpatient_admission.py:    attachment_ids = fields.Many2many('ir.attachment', string='Attachments')
./models/inpatient_admission.py:    document_ids = fields.One2many('hospital.inpatient.document', 'inpatient_id', string='Documents')
./models/inpatient_admission.py:    form_ids = fields.One2many('hospital.inpatient.form', 'inpatient_id', string='Forms & Scales')
./models/inpatient_admission.py:    inpatient_id = fields.Many2one('hospital.inpatient.admission', string='Inpatient', required=True, ondelete='cascade')
./models/inpatient_admission.py:    user_id = fields.Many2one('res.users', string='Uploaded By', default=lambda self: self.env.user)
./models/inpatient_admission.py:    inpatient_id = fields.Many2one('hospital.inpatient.admission', string='Inpatient', required=True, ondelete='cascade')
./models/inpatient_admission.py:    completed_by = fields.Many2one('res.users', string='Completed By', default=lambda self: self.env.user)
./models/bed.py:    room_id = fields.Many2one('hospital.room', string='Room', required=True)
./models/bed.py:    block_id = fields.Many2one('hospital.block', string='Block', required=True)
./models/bed.py:    current_patient_id = fields.Many2one('hospital.patient', string='Current Patient')
./models/block_duty.py:    block_id = fields.Many2one('hospital.block', string='Block', required=True)
./models/block_duty.py:    responsible_id = fields.Many2one('res.users', string='Responsible', required=True)
./models/block_duty.py:    assistant_ids = fields.Many2many('res.users', 'block_duty_user_rel', 'duty_id', 'user_id', string='Assistants')
./models/block_duty.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus')
./models/block_duty.py:    employee_id = fields.Many2one('hr.employee', string='Employee', tracking=True)
./models/block_duty.py:    duty_roster_id = fields.Many2one('hospital.duty.roster', string='Duty Roster', tracking=True)
./models/block_duty.py:    block_id = fields.Many2one('hospital.block', string='Block', required=True, tracking=True)
./models/block_duty.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company, tracking=True)
./models/block_duty.py:    user_id = fields.Many2one('res.users', string='User', default=lambda self: self.env.user, tracking=True)
./models/block_duty.py:    assignment_line_ids = fields.One2many('hospital.block.duty.assignment.line', 'assignment_id', string='Assignment Lines')
./models/block_duty.py:    assignment_id = fields.Many2one('hospital.block.duty.assignment', string='Assignment', required=True)
./models/block_duty.py:    block_id = fields.Many2one(related='assignment_id.block_id', string='Block', store=True)
./models/block_duty.py:    responsible_id = fields.Many2one(related='assignment_id.responsible_id', string='Responsible', store=True)
./models/block_duty.py:    checklist_ids = fields.One2many('hospital.block.duty.checklist.line', 'register_id', string='Checklist Items')
./models/block_duty.py:    employee_id = fields.Many2one('hr.employee', string='Employee', tracking=True)
./models/block_duty.py:    duty_roster_id = fields.Many2one('hospital.duty.roster', string='Duty Roster', tracking=True)
./models/block_duty.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company, tracking=True)
./models/block_duty.py:    user_id = fields.Many2one('res.users', string='User', default=lambda self: self.env.user, tracking=True)
./models/block_duty.py:    register_line_ids = fields.One2many('hospital.block.duty.register.line', 'register_id', string='Register Lines')
./models/block_duty.py:    patient_reporting_ids = fields.One2many('hospital.block.duty.patient.reporting', 'register_id', string='Patient Reporting')
./models/block_duty.py:    block_reporting_ids = fields.One2many('hospital.block.duty.block.reporting', 'register_id', string='Block Reporting')
./models/block_duty.py:    block_id = fields.Many2one('hospital.block', string='Block', required=True)
./models/block_duty.py:    register_id = fields.Many2one('hospital.block.duty.register', string='Register')
./models/block_duty.py:    checklist_id = fields.Many2one('hospital.block.duty.checklist', string='Checklist Item')
./models/block_duty.py:    completed_by = fields.Many2one('res.users', string='Completed By')
./models/block_duty.py:    # block_id = fields.Many2one('hospital.block', string='Block', required=True)
./models/block_duty.py:    # responsible_id = fields.Many2one('res.users', string='Responsible', required=True)
./models/block_duty.py:    # report_lines = fields.One2many('hospital.block.duty.report.line', 'report_id', string='Report Lines')
./models/block_duty.py:    assignment_id = fields.Many2one('hospital.block.duty.assignment', string='Assignment')
./models/block_duty.py:    employee_id = fields.Many2one('hr.employee', string='Employee')
./models/block_duty.py:    duty_roster_id = fields.Many2one('hospital.duty.roster', string='Duty Roster')
./models/block_duty.py:    block_id = fields.Many2one('hospital.block', string='Block')
./models/block_duty.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus')
./models/block_duty.py:    register_id = fields.Many2one('hospital.block.duty.register', string='Register')
./models/block_duty.py:    register_id = fields.Many2one('hospital.block.duty.register', string='Register')
./models/block_duty.py:    patient_id = fields.Many2one('hospital.patient', string='Patient')
./models/block_duty.py:    register_id = fields.Many2one('hospital.block.duty.register', string='Register')
./models/patient_vaccine.py:    vaccine_id = fields.Many2one('hospital.vaccine', string='Vaccine', required=True, tracking=True)
./models/patient_vaccine.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/patient_vaccine.py:    physician_id = fields.Many2one('res.partner', string='Physician', domain=[('is_physician', '=', True)], tracking=True)
./models/patient_vaccine.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/patient_vaccine.py:    vaccine_id = fields.Many2one('hospital.vaccine', string='Vaccine')
./models/patient_vaccine.py:    patient_vaccine_ids = fields.One2many('hospital.patient.vaccine', 'vaccine_id', string='Patient Vaccines')
./models/patient_vaccine.py:    vaccine_type_id = fields.Many2one('hospital.vaccine.type', string='Vaccine Type', required=True)
./models/patient_vaccine.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/patient_vaccine.py:    physician_id = fields.Many2one('hospital.physician', string='Physician')
./models/case_history.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/case_history.py:    languages_known = fields.Many2many('res.lang', string='Languages known')
./models/case_history.py:    occupation = fields.Many2one('hospital.patient.occupation', string='Occupation')
./models/case_history.py:    relationship_id = fields.Many2one('hospital.patient.relationship', string='Relationship')
./models/case_history.py:    complaint_ids = fields.One2many('hospital.chief.complaint', 'case_history_id', string='CHIEF COMPLAINTS')
./models/case_history.py:    physiatric_medication_ids = fields.One2many('hospital.psychiatric.medication', 'case_history_id', string='Psychiatric Medication')
./models/case_history.py:    general_medication_ids = fields.One2many('hospital.general.medication', 'case_history_id', string='General Medication')
./models/case_history.py:    physiatric_effect_ids = fields.One2many('hospital.psychiatric.effect', 'case_history_id', string='Psychiatric Medication Effects')
./models/case_history.py:    general_effect_ids = fields.One2many('hospital.general.effect', 'case_history_id', string='General Medication Effects')
./models/case_history.py:    physical_illness_ids = fields.Many2many('hospital.physical.illness', string='Physical Illness')
./models/case_history.py:    risk_assessment_ids = fields.One2many('hospital.risk.assessment', 'case_history_id', string='Risk Assessment')
./models/case_history.py:    psychomotor_activity_ids = fields.Many2many('hospital.psychomotor.activity', string='Psychomotor Activity')
./models/case_history.py:    catatonic_signs = fields.Many2many('hospital.catatonic.sign', string='Catatonic Signs')
./models/case_history.py:    case_history_id = fields.Many2one('hospital.case.history', string='Case History', ondelete='cascade')
./models/case_history.py:    case_history_id = fields.Many2one('hospital.case.history', string='Case History', ondelete='cascade')
./models/case_history.py:    case_history_id = fields.Many2one('hospital.case.history', string='Case History', ondelete='cascade')
./models/case_history.py:    case_history_id = fields.Many2one('hospital.case.history', string='Case History', ondelete='cascade')
./models/case_history.py:    case_history_id = fields.Many2one('hospital.case.history', string='Case History', ondelete='cascade')
./models/case_history.py:    case_history_id = fields.Many2one('hospital.case.history', string='Case History', ondelete='cascade')
./models/hospital_independent_examination.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/hospital_independent_examination.py:    professional_line_ids = fields.One2many('hospital.independent.examination.professional', 
./models/hospital_independent_examination.py:    examination_category_id = fields.One2many('hospital.independent.examination.category', 
./models/hospital_independent_examination.py:    examination_document_ids = fields.One2many('hospital.independent.examination.document', 
./models/hospital_independent_examination.py:    examination_capacity_ids = fields.One2many('hospital.independent.examination.capacity', 
./models/hospital_independent_examination.py:    examintation_mental_health = fields.One2many('hospital.independent.examination.mental.health', 
./models/hospital_independent_examination.py:    examination_details_ids = fields.One2many('hospital.independent.examination.scales', 
./models/hospital_independent_examination.py:    examination_id = fields.Many2one('hospital.independent.examination', string='Examination', ondelete='cascade')
./models/hospital_independent_examination.py:    professional_id = fields.Many2one('hospital.employee', string='Professional')
./models/hospital_independent_examination.py:    examination_id = fields.Many2one('hospital.independent.examination', string='Examination', ondelete='cascade')
./models/hospital_independent_examination.py:    doctor_name = fields.Many2one('hospital.physician', string='Doctor Name')
./models/hospital_independent_examination.py:    examination_id = fields.Many2one('hospital.independent.examination', string='Examination', ondelete='cascade')
./models/hospital_independent_examination.py:    examination_id = fields.Many2one('hospital.independent.examination', string='Examination', ondelete='cascade')
./models/hospital_independent_examination.py:    psychiatrist = fields.Many2one('hospital.physician', string='Psychiatrist')
./models/hospital_independent_examination.py:    examination_id = fields.Many2one('hospital.independent.examination', string='Examination', ondelete='cascade')
./models/hospital_independent_examination.py:    examination_id = fields.Many2one('hospital.independent.examination', string='Examination', ondelete='cascade')
./models/models.py:    follow_up_sheet_id = fields.Many2one('hospital.follow.up.sheet', string='Follow-Up Sheet', required=True, ondelete='cascade')
./models/models.py:#     patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/models.py:#     physician_id = fields.Many2one('hospital.physician', string='Physician', required=True, tracking=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True, tracking=True)
./models/models.py:#     patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:#     physician_id = fields.Many2one('hospital.physician', string='Physician')
./models/models.py:#     medicine_line_ids = fields.One2many('hospital.medicine.consumption.line', 'consumption_id', 
./models/models.py:    consumption_id = fields.Many2one('hospital.medicine.consumption', string='Consumption')
./models/models.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/models.py:    dose_unit_id = fields.Many2one('hospital.dose.unit', string='Dose Unit')
./models/models.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Physician')
./models/models.py:    frequency_id = fields.Many2one('hospital.drug.frequency', string='Frequency')
./models/models.py:    campus_id = fields.Many2one('hospital.campus', string='Campus')
./models/models.py:    person_responsible = fields.Many2one('res.users', string='Person Responsible')
./models/models.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Physician')
./models/models.py:    nurse_id = fields.Many2one('res.users', string='Nurse')
./models/models.py:    route_id = fields.Many2one('hospital.drug.route', string='Route')
./models/models.py:    dose_unit_id = fields.Many2one('hospital.dose.unit', string='Dose Unit')
./models/models.py:    nurse_id = fields.Many2one('res.users', string='Nurse', required=True)
./models/models.py:    block_id = fields.Many2one('hospital.block', string='Block', required=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True)
./models/models.py:    witness_id = fields.Many2one('res.users', string='Witness')
./models/models.py:    nurse_id = fields.Many2one('res.users', string='Nurse')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    psychiatrist_id = fields.Many2one('hospital.physician', string='Psychiatrist')
./models/models.py:    assistant_id = fields.Many2one('res.users', string='Assistant')
./models/models.py:    witness_id = fields.Many2one('res.users', string='Witness')
./models/models.py:    # log_ids = fields.One2many('ect.form.log', 'form_id', string='Logs')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Mental Health Professional (Psychiatrist)', required=True, tracking=True)
./models/models.py:    medical_officer_id = fields.Many2one('hospital.physician', string='Medical Officer', tracking=True) # Or res.users
./models/models.py:    non_psychiatrist_professional_id = fields.Many2one('hr.employee', string='Mental Health Professional (Non Psychiatrist)', tracking=True) # Or other relevant model
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True)
./models/models.py:    languages_known = fields.Many2many('res.lang', string='Languages Known')
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    admitted_by = fields.Many2one('hospital.physician', string='Admitted By', tracking=True)
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    admitted_by = fields.Many2one('hospital.physician', string='Admitted By', tracking=True)
./models/models.py:    medical_officer = fields.Many2one('hospital.physician', string='Medical Officer', tracking=True)
./models/models.py:    staff_nurse = fields.Many2one('res.users', string='Staff Nurse', tracking=True)
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    admitted_by = fields.Many2one('hospital.physician', string='Admitted By', tracking=True)
./models/models.py:    reported_by = fields.Many2one('res.users', string='Reported By', default=lambda self: self.env.user.id, tracking=True)
./models/models.py:    reviewed_by = fields.Many2one('res.users', string='Reviewed By', tracking=True)
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    admitted_by = fields.Many2one('hospital.physician', string='Admitted By', tracking=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    examiner_id = fields.Many2one('hospital.physician', string='Examining Professional', required=True)
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    professional_line_ids = fields.One2many('hospital.independent.examination.professional.line', 
./models/models.py:    professional_category_id = fields.One2many('hospital.professional.category', 
./models/models.py:    examination_id = fields.Many2one('hospital.independent.examination.professional.ii', 
./models/models.py:    professional_id = fields.Many2one('hr.employee', string='Professional', 
./models/models.py:    examination_id = fields.Many2one('hospital.independent.examination.professional.ii', 
./models/models.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Physician')
./models/models.py:    nurse_id = fields.Many2one('res.users', string='Nurse')
./models/models.py:    route_id = fields.Many2one('hospital.drug.route', string='Route')
./models/models.py:    dose_unit_id = fields.Many2one('hospital.dose.unit', string='Dose Unit')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Performing Physician', tracking=True)
./models/models.py:    inpatient_admission_id = fields.Many2one(
./models/models.py:    company_id = fields.Many2one(
./models/models.py:    debit_note_id = fields.Many2one(
./models/models.py:    user_id = fields.Many2one(
./models/models.py:    approved_by = fields.Many2one(
./models/models.py:    requisition_line_ids = fields.One2many(
./models/models.py:    material_line_ids = fields.One2many(
./models/models.py:    procedure_id = fields.Many2one(
./models/models.py:    product_id = fields.Many2one(
./models/models.py:    internal_category_id = fields.Many2one(
./models/models.py:    currency_id = fields.Many2one(
./models/models.py:    procedure_id = fields.Many2one(
./models/models.py:    product_id = fields.Many2one(
./models/models.py:    internal_category_id = fields.Many2one(
./models/models.py:    inpatient_admission_id = fields.Many2one(
./models/models.py:    patient_id = fields.Many2one(
./models/models.py:    physician_id = fields.Many2one(
./models/models.py:    requisition_line_ids = fields.One2many(
./models/models.py:    warehouse_id = fields.Many2one('stock.warehouse', string='Warehouse', tracking=True)
./models/models.py:    picking_type_id = fields.Many2one('stock.picking.type', string='Picking Type', tracking=True)
./models/models.py:    source_location_id = fields.Many2one('stock.location', string='Source Location', tracking=True)
./models/models.py:    destination_location_id = fields.Many2one('stock.location', string='Destination Location', tracking=True)
./models/models.py:    stock_picking_ids = fields.Many2many('stock.picking', string='Stock Pickings', tracking=True)
./models/models.py:    company_id = fields.Many2one(
./models/models.py:    user_id = fields.Many2one(
./models/models.py:    approved_by = fields.Many2one('res.users', string='Approved By', readonly=True, tracking=True)
./models/models.py:    debit_note_id = fields.Many2one('account.move', string='Debit Note', readonly=True, tracking=True)
./models/models.py:    requisition_id = fields.Many2one('hospital.medicine.requisition', string='Requisition')
./models/models.py:    product_id = fields.Many2one(
./models/models.py:    internal_category_id = fields.Many2one('product.category', string='Internal Category')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    admitted_by = fields.Many2one('hospital.physician', string='Admitted By', tracking=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', tracking=True)
./models/models.py:    guardian_id = fields.Many2one('hospital.patient.relationship', string='Guardian', tracking=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Admitting Physician', tracking=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    admitted_by = fields.Many2one('hospital.physician', string='Admitted By', tracking=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', tracking=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', tracking=True)
./models/models.py:    partner_id = fields.Many2one('res.partner', string='Vendor', tracking=True)
./models/models.py:    product_id = fields.Many2one('product.product', string='Nature of Outing', domain="[('can_be_expensed','=',True)]")
./models/models.py:    vehicle_id = fields.Many2one('fleet.vehicle', string='Vehicle')
./models/models.py:    issued_to = fields.Many2one('res.users', string='Amount issued to')
./models/models.py:    invoice_id = fields.Many2one('account.move', string='Vendor Bill')
./models/models.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/models.py:    user_id = fields.Many2one('res.users', string='Responsible', default=lambda self: self.env.user)
./models/models.py:    patient_expense_line_ids = fields.One2many('hospital.outing.expense.line', 'outing_expense_id', string='Patient Expense Lines')
./models/models.py:    patient_specific_expense_line_ids = fields.One2many('hospital.patient.specific.expense', 'outing_expense_id', string='Patient Specific Expense Lines')
./models/models.py:    employee_ids = fields.Many2many('hr.employee', string='Employees / Resources')
./models/models.py:    outing_expense_id = fields.Many2one('hospital.outing.expenses', string='Outing Expense')
./models/models.py:    inpatient_admission_id = fields.Many2one('hospital.inpatient.admission', string='Inpatient Admission', 
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient')
./models/models.py:    campus_id = fields.Many2one('hospital.campus', string='Campus')
./models/models.py:    block_id = fields.Many2one('hospital.block', string='Block')
./models/models.py:    room_id = fields.Many2one('hospital.room', string='Room')
./models/models.py:    outing_expense_id = fields.Many2one('hospital.outing.expenses', string='Outing Expense')
./models/models.py:    inpatient_admission_id = fields.Many2one('hospital.inpatient.admission', string='Inpatient Admission')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient')
./models/models.py:    partner_id = fields.Many2one('res.partner', string='Partner')
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    partner_id = fields.Many2one('res.partner', string='Outing Destination', tracking=True)
./models/models.py:    admitted_by = fields.Many2one('hr.employee', string='Admitted By', tracking=True)
./models/models.py:    doctor = fields.Many2one('hr.employee', string='Doctor', tracking=True)
./models/models.py:    nurse = fields.Many2one('hr.employee', string='Nurse', tracking=True)
./models/models.py:    grt = fields.Many2one('hr.employee', string='GRT', tracking=True)
./models/models.py:    security = fields.Many2one('hr.employee', string='Security', tracking=True)
./models/models.py:    inpatient_admission_id = fields.Many2one('hospital.inpatient.admission', string='IP Number', tracking=True,
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/models.py:    requisition_line_ids = fields.One2many('hospital.patient.requisition.line', 'requisition_id', 
./models/models.py:    warehouse_id = fields.Many2one('stock.warehouse', string='Warehouse', tracking=True)
./models/models.py:    picking_type_id = fields.Many2one('stock.picking.type', string='Picking Type', tracking=True)
./models/models.py:    source_location_id = fields.Many2one('stock.location', string='Source Location', tracking=True)
./models/models.py:    destination_location_id = fields.Many2one('stock.location', string='Destination Location', tracking=True)
./models/models.py:    stock_picking_ids = fields.Many2many('stock.picking', string='Stock Pickings', tracking=True)
./models/models.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company, tracking=True)
./models/models.py:    user_id = fields.Many2one('res.users', string='Requested By', 
./models/models.py:    approved_by = fields.Many2one('res.users', string='Approved By', readonly=True, tracking=True)
./models/models.py:    requisition_id = fields.Many2one('hospital.patient.requisition', string='Requisition')
./models/models.py:    product_id = fields.Many2one('product.product', string='Product', 
./models/models.py:    internal_category_id = fields.Many2one('product.category', string='Internal Category')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    inpatient_admission_id = fields.Many2one('hospital.inpatient', string='Inpatient Admission')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient')
./models/models.py:    campus_id = fields.Many2one('hospital.campus', string='Campus')
./models/models.py:    block_id = fields.Many2one('hospital.block', string='Block')
./models/models.py:    room_id = fields.Many2one('hospital.room', string='Room')
./models/models.py:    bed_id = fields.Many2one('hospital.bed', string='Bed')
./models/models.py:    product_id = fields.Many2one('product.product', string='Product')
./models/models.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/models.py:    user_id = fields.Many2one('res.users', string='User', default=lambda self: self.env.user)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    inpatient_admission_id = fields.Many2one(
./models/models.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/models.py:    debit_note_id = fields.Many2one('account.move', string='Debit Note', readonly=True)
./models/models.py:    requisition_line_ids = fields.One2many(
./models/models.py:    material_line_ids = fields.One2many(
./models/models.py:    user_id = fields.Many2one('res.users', string='Created By', default=lambda self: self.env.user, readonly=True)
./models/models.py:    approved_by = fields.Many2one('res.users', string='Approved By', readonly=True)
./models/models.py:    bill_id = fields.Many2one('hospital.provisional.bill', string='Bill')
./models/models.py:    product_id = fields.Many2one('product.product', string='Product')
./models/models.py:    internal_category_id = fields.Many2one('product.category', string='Internal Category')
./models/models.py:    room_id = fields.Many2one('hospital.room', string='Room', required=True)
./models/models.py:    inspector_id = fields.Many2one('res.users', string='Inspector')
./models/models.py:    inpatient_admission_id = fields.Many2one(
./models/models.py:    patient_id = fields.Many2one(
./models/models.py:    physician_id = fields.Many2one(
./models/models.py:    prescribing_doctor = fields.Many2one(
./models/models.py:    requisition_line_ids = fields.One2many(
./models/models.py:    debit_note_id = fields.Many2one(
./models/models.py:    company_id = fields.Many2one(
./models/models.py:    user_id = fields.Many2one(
./models/models.py:    approved_by = fields.Many2one(
./models/models.py:    requisition_id = fields.Many2one('hospital.service.requisition', string='Requisition')
./models/models.py:    product_id = fields.Many2one(
./models/models.py:    internal_category_id = fields.Many2one('product.category', string='Internal Category')
./models/models.py:#     patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:#     approved_by = fields.Many2one('res.users', string='Approved By')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/models.py:    cleared_by = fields.Many2one('res.users', string='Cleared By')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    inpatient_admission_id = fields.Many2one('hospital.admission', string='IP Number', tracking=True)
./models/models.py:    partner_id = fields.Many2one('res.partner', string='Vendor',  tracking=True)
./models/models.py:    invoice_id = fields.Many2one('account.move', string='Invoice', tracking=True)
./models/models.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company, tracking=True)
./models/models.py:    user_id = fields.Many2one('res.users', string='Responsible', default=lambda self: self.env.user, tracking=True)
./models/models.py:    variable_billing_line_ids = fields.One2many('hospital.variable.billing.line', 'variable_billing_id', string='Variable Billing Lines')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient')
./models/models.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/models.py:    approved_by = fields.Many2one('res.users', string='Approved By')
./models/models.py:    variable_billing_id = fields.Many2one('hospital.variable.billing', string='Variable Billing')
./models/models.py:    product_id = fields.Many2one('product.product', string='Product', domain="[('variable_billing','=',True)]")
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:#     caretaker_id = fields.Many2one('hospital.caretaker', string='Caretaker', required=True)
./models/models.py:#     patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    caretaker_type_id = fields.Many2one('hospital.caretaker.type', string='Caretaker Type', required=True)
./models/models.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    counsellor_id = fields.Many2one('hospital.physician', string='Counsellor')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    counsellor_id = fields.Many2one('hospital.physician', string='Counsellor')
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    duty_doctor = fields.Many2one('hospital.physician', string='Duty Doctor', tracking=True)
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    clearance_given = fields.Many2one('hr.employee', string='Clearance Given By', 
./models/models.py:    nurse = fields.Many2one('hr.employee', string='Nurse', domain="[('job_id.name','in',['NURSES'])]", tracking=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Physician', required=True)
./models/models.py:    inpatient_admission_id = fields.Many2one(
./models/models.py:    patient_id = fields.Many2one(
./models/models.py:    physician_id = fields.Many2one(
./models/models.py:    advising_doctor_id = fields.Many2one(
./models/models.py:    requisition_line_ids = fields.One2many(
./models/models.py:    warehouse_id = fields.Many2one('stock.warehouse', string='Warehouse', tracking=True)
./models/models.py:    picking_type_id = fields.Many2one('stock.picking.type', string='Picking Type', tracking=True)
./models/models.py:    source_location_id = fields.Many2one('stock.location', string='Source Location', tracking=True)
./models/models.py:    destination_location_id = fields.Many2one('stock.location', string='Destination Location', tracking=True)
./models/models.py:    stock_picking_ids = fields.Many2many('stock.picking', string='Stock Pickings', tracking=True)
./models/models.py:    company_id = fields.Many2one(
./models/models.py:    user_id = fields.Many2one(
./models/models.py:    approved_by = fields.Many2one('res.users', string='Approved By', readonly=True, tracking=True)
./models/models.py:    administered_by = fields.Many2one('res.users', string='Administered By', tracking=True)
./models/models.py:    requisition_id = fields.Many2one('hospital.emergency.medicine', string='Requisition')
./models/models.py:    product_id = fields.Many2one(
./models/models.py:    internal_category_id = fields.Many2one('product.category', string='Internal Category')
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True, tracking=True)
./models/models.py:    admitted_by = fields.Many2one('res.users', string='Admitted By', default=lambda self: self.env.user)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    admitted_by = fields.Many2one('hospital.physician', string='Admitted By', tracking=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', tracking=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Admitting Physician', tracking=True)
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician')
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True)
./models/models.py:    ref_doctor = fields.Many2one('hospital.physician', string='Referring Doctor')
./models/models.py:    hematology_ids = fields.Many2many(
./models/models.py:    biochemistry_ids = fields.Many2many(
./models/models.py:    hormones_ids = fields.Many2many(
./models/models.py:    microbiology_ids = fields.Many2many(
./models/models.py:    immunology_ids = fields.Many2many(
./models/models.py:    urine_che_ids = fields.Many2many(
./models/models.py:    urine_screening_ids = fields.Many2many(
./models/models.py:    drug_assays_ids = fields.Many2many(
./models/models.py:    molecular_bio_ids = fields.Many2many(
./models/models.py:    miscelleneous_ids = fields.Many2many(
./models/models.py:    profile_ids = fields.Many2many(
./models/models.py:    ip_number = fields.Many2one('hospital.patient', string='IP Number', required=True)
./models/models.py:    duty_doctor = fields.Many2one('hospital.physician', string='Duty Doctor')
./models/models.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/models.py:    physician_id = fields.Many2one('hospital.physician', string='Requesting Physician', tracking=True)
./models/models.py:    test_ids = fields.One2many('hospital.lab.test.requisition.line', 'requisition_id', string='Tests')
./models/models.py:    company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
./models/models.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/models.py:    requisition_id = fields.Many2one('hospital.lab.test.requisition', string='Requisition')
./models/medical_record.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/medical_record.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/medical_record.py:    physician_id = fields.Many2one('res.partner', string='Physician')
./models/medical_record.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/medical_record.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/medical_record.py:    recorded_by = fields.Many2one('res.users', string='Recorded By', default=lambda self: self.env.user)
./models/medical_record.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/medical_record.py:    admission_id = fields.Many2one('hospital.inpatient.admission', string='Admission')
./models/medical_record.py:    campus_id = fields.Many2one('hospital.hospital', string='Campus')
./models/medical_record.py:    examiner_id = fields.Many2one('res.users', string='Examiner', default=lambda self: self.env.user)
./models/medical_record.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/medical_record.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/medical_record.py:    created_by = fields.Many2one('res.users', string='Created By', default=lambda self: self.env.user)
./models/medical_record.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/medical_record.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/medical_record.py:    nurse_id = fields.Many2one('res.users', string='Nurse', default=lambda self: self.env.user)
./models/medical_record.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True)
./models/medical_record.py:    admission_id = fields.Many2one('hospital.admission', string='Admission')
./models/medical_record.py:    line_ids = fields.One2many('hospital.drug.chart.line', 'drug_chart_id', string='Drug Lines')
./models/medical_record.py:    drug_chart_id = fields.Many2one('hospital.drug.chart', string='Drug Chart')
./models/medical_record.py:    medicine_id = fields.Many2one('hospital.medicine', string='Medicine', required=True)
./models/medical_record.py:    frequency_id = fields.Many2one('hospital.drug.frequency', string='Frequency')
./models/medical_record.py:    route_id = fields.Many2one('hospital.drug.route', string='Route')
./models/medical_record.py:    administration_ids = fields.One2many('hospital.drug.administration', 'chart_line_id', string='Administrations')
./models/medical_record.py:    chart_line_id = fields.Many2one('hospital.drug.chart.line', string='Drug Chart Line')
./models/medical_record.py:    patient_id = fields.Many2one(related='chart_line_id.drug_chart_id.patient_id', string='Patient', store=True)
./models/medical_record.py:    medicine_id = fields.Many2one(related='chart_line_id.medicine_id', string='Medicine', store=True)
./models/medical_record.py:    administered_by = fields.Many2one('res.users', string='Administered By')
./models/medicine_packing.py:    patient_id = fields.Many2one('hospital.patient', string='Patient', required=True, tracking=True)
./models/medicine_packing.py:    medicine_line_ids = fields.One2many('hospital.medicine.packing.line', 'packing_id', string='Medicine Lines')
./models/medicine_packing.py:    packing_id = fields.Many2one('hospital.medicine.packing', string='Packing', required=True, ondelete='cascade')
./models/medicine_packing.py:    product_id = fields.Many2one('product.product', string='Product', required=True)
