<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- First create the category if it doesn't exist -->
    <record id="module_category_healthcare" model="ir.module.category">
        <field name="name">Healthcare</field>
        <field name="description">Healthcare related modules</field>
        <field name="sequence">100</field>
    </record>

    <!-- Then create the groups referencing our new category -->
    <record id="group_medical_admin" model="res.groups">
        <field name="name">Medical Administrator</field>
        <field name="category_id" ref="module_category_healthcare"/>
    </record>

    <record id="group_medical_doctor" model="res.groups">
        <field name="name">Doctor</field>
        <field name="category_id" ref="module_category_healthcare"/>
    </record>

    <record id="group_medical_staff" model="res.groups">
        <field name="name">Medical Staff</field>
        <field name="category_id" ref="module_category_healthcare"/>
    </record>

    <!-- Record rules - using search instead of direct ref -->
    <!-- <record id="medical_hospital_rule" model="ir.rule">
        <field name="name">Hospital Access Rule</field>
        <field name="model_id" ref="model_medical_hospital"/>
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="groups" eval="[(4, ref('group_medical_admin'))]"/>
    </record>

    <record id="medical_doctor_rule" model="ir.rule">
        <field name="name">Doctor Access Rule</field>
        <field name="model_id" ref="model_medical_doctor"/>
        <field name="domain_force">[('hospital_id', 'in', user.hospital_ids)]</field>
        <field name="groups" eval="[(4, ref('group_medical_admin'))]"/>
    </record> -->
</odoo>